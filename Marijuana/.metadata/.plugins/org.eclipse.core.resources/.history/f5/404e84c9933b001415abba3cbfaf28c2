package marijuanaCrawler;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;

public class CraiglistEntryParser {
	private final int numRetryDownloadPage = 2;

	protected String link = null;
	protected Document doc = null;
	protected String content = null;
	protected String timeCreated = null;
	protected String dateCreated = null;

	public CraiglistEntryParser(String link) {
		if (link == null)
			return;

		this.link = link;
		downloadHtmlContent(this.link, this.numRetryDownloadPage);
	}

	public CraiglistEntryParser(Document doc) {
		if (doc == null)
			return;

		this.link = null;
		this.doc = doc;
		this.content = this.doc.outerHtml();
	}

	protected void downloadHtmlContent(String url, int numRetryDownloadPage) {
		this.doc = NetworkingFunctions.downloadHtmlContent(url,
				numRetryDownloadPage);

		if (this.doc != null) {
			this.content = this.doc.outerHtml();
		} else
			this.content = null;
	}

	public boolean isValid() {
		return (this.doc != null && this.content != null);
	}

	public String getContent() {
		return this.content;
	}

	public boolean parseDoc() {
		if (!this.isValid())
			return false;

		this.parseWeedPrice();

		return true;
	}

	// Parse the price of the weed
	private boolean parseWeedPrice() {
		Elements postingBodyElems = doc.select("section[id=postingbody]");
		if (postingBodyElems.size() != 1) {
			return;
		}

		String dateCreatedText = new String(postingBodyElems.get(0)
				.attr("content").toString());
		dateCreatedText = dateCreatedText.trim();
		dateCreatedText = dateCreatedText.substring(0,
				dateCreatedText.indexOf('T'));
		this.dateCreated = dateCreatedText;

		if (Globals.DEBUG)
			System.out.println("Date Created = " + this.dateCreated);

	}

	public static void main(String[] args) {
		CraiglistEntryParser parser = new CraiglistEntryParser(
				"http://seattle.craigslist.org/skc/for/4666121116.html");

		if (parser.parseDoc()) {

		}
	}
}
